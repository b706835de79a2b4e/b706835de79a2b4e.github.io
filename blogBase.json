{"singlePage": [], "startSite": "", "filingNum": "", "onePageListNum": 15, "commentLabelColor": "#006b75", "yearColorList": ["#bc4c00", "#0969da", "#1f883d", "#A333D0"], "i18n": "CN", "themeMode": "manual", "dayTheme": "light", "nightTheme": "dark", "urlMode": "pinyin", "script": "", "style": "", "head": "", "indexScript": "", "indexStyle": "", "bottomText": "", "showPostSource": 1, "iconList": {}, "UTC": 8, "rssSplit": "sentence", "exlink": {}, "needComment": 1, "allHead": "", "title": "\u6280\u672f\u5206\u4eab\u535a\u5ba2", "subTitle": "\u5206\u4eab\u6280\u672f\u3001\u5206\u4eab\u8d44\u6e90", "avatarUrl": "https://github.githubassets.com/favicons/favicon.svg", "GMEEK_VERSION": "last", "postListJson": {"P1": {"htmlDir": "docs/post/test 1.html", "labels": ["documentation"], "postTitle": "test 1", "postUrl": "post/test%201.html", "postSourceUrl": "https://github.com/b706835de79a2b4e/b706835de79a2b4e.github.io/issues/1", "commentNum": 0, "wordCount": 11, "description": "test post 1\u3002", "top": 0, "createdAt": 1720158313, "style": "", "script": "", "head": "", "ogImage": "https://github.githubassets.com/favicons/favicon.svg", "createdDate": "2024-07-05", "dateLabelColor": "#bc4c00"}, "P2": {"htmlDir": "docs/post/use JavaScript write Telegram bot code , can deploy to Cloudflare Worker.html", "labels": ["JavaScript", "TelegramBot"], "postTitle": "use JavaScript write Telegram bot code , can deploy to Cloudflare Worker", "postUrl": "post/use%20JavaScript%20write%20Telegram%20bot%20code%20%2C%20can%20deploy%20to%20Cloudflare%20Worker.html", "postSourceUrl": "https://github.com/b706835de79a2b4e/b706835de79a2b4e.github.io/issues/2", "commentNum": 0, "wordCount": 3006, "description": "**Here's the JavaScript code for a basic Telegram bot that you can deploy to Cloudflare Worker:**\r\n\r\n~~~javascript\r\nimport { KVNamespace } from 'cloudflare-workers';\r\n\r\n// Replace with your Telegram bot token\r\nconst BOT_TOKEN = 'YOUR_BOT_TOKEN';\r\n\r\n// Create a KV Namespace for storing bot state\r\nconst kv = new KVNamespace('bot-state');\r\n\r\n// Function to send a message to a chat\r\nasync function sendMessage(chatId, message) {\r\n  const url = `https://api.telegram.org/bot${BOT_TOKEN}/sendMessage`;\r\n  const body = new URLSearchParams({\r\n    chat_id: chatId,\r\n    text: message,\r\n  });\r\n  await fetch(url, {\r\n    method: 'POST',\r\n    body,\r\n  });\r\n}\r\n\r\n// Function to handle incoming Telegram updates\r\nasync function handleUpdate(update) {\r\n  const chatId = update.message.chat.id;\r\n  const message = update.message.text;\r\n\r\n  // Simple echo functionality - respond with the same message\r\n  await sendMessage(chatId, message);\r\n\r\n  // You can add more logic here to handle different messages\r\n  // and implement more complex bot functionalities\r\n}\r\n\r\n// Handle HTTP requests\r\naddEventListener('fetch', async event => {\r\n  const request = event.request;\r\n\r\n  if (request.method === 'POST') {\r\n    const data = await request.json();\r\n    const update = data.update;\r\n\r\n    // Update bot state if needed (e.g., storing chat history)\r\n    // await kv.put('chatHistory', JSON.stringify(update));\r\n\r\n    await handleUpdate(update);\r\n\r\n    return new Response('OK');\r\n  } else {\r\n    return new Response('Method Not Allowed', { status: 405 });\r\n  }\r\n});\r\n\r\n~~~\r\n\r\n**Explanation:**\r\n\r\n- Imports: Imports KVNamespace from cloudflare-workers for storing bot state.\r\n   - Bot Token: Replace YOUR_BOT_TOKEN with your actual Telegram bot token obtained from [@BotFather](https://core.telegram.org/bots#6-botfather).\r\n- `sendMessage` Function: Sends a message to a chat using Telegram Bot API.\r\n- `handleUpdate` Function: Processes incoming Telegram updates (messages in this case).\r\n   - Extracts chat ID and message text.\r\n   - Currently implements a simple echo functionality (responds with the same message).\r\n   - You can modify this to handle different messages and implement more complex logic.\r\n- Event Listener: Listens for incoming HTTP requests.\r\n   - Only handles POST requests containing Telegram updates in JSON format.\r\n   - Calls handleUpdate to process the update.\r\n\r\n**Deployment:**\r\n\r\n1. Replace `YOUR_BOT_TOKEN` with your actual token.\r\n2. Copy the code and deploy it to your Cloudflare Worker.\r\n3. Set up a webhook for your Telegram bot using the URL of your deployed Worker. You can find instructions on setting webhooks in the Telegram Bot API documentation (https://core.telegram.org/).\r\n\r\n**Note:**\r\n\r\n- This is a basic example and doesn't include features like error handling, user state management, or advanced functionality. You'll need to extend it based on your specific requirements.\r\n- Make sure to enable KV storage in your Cloudflare Worker settings if you plan to use it for bot state.\u3002", "top": 0, "createdAt": 1720508463, "style": "", "script": "", "head": "", "ogImage": "https://github.githubassets.com/favicons/favicon.svg", "createdDate": "2024-07-09", "dateLabelColor": "#bc4c00"}}, "singeListJson": {}, "labelColorDict": {"bug": "#d73a4a", "documentation": "#0075ca", "duplicate": "#cfd3d7", "enhancement": "#a2eeef", "good first issue": "#7057ff", "help wanted": "#008672", "invalid": "#e4e669", "JavaScript": "#5319e7", "question": "#d876e3", "TelegramBot": "#3ADEF3", "wontfix": "#ffffff"}, "displayTitle": "\u6280\u672f\u5206\u4eab\u535a\u5ba2", "faviconUrl": "https://github.githubassets.com/favicons/favicon.svg", "ogImage": "https://github.githubassets.com/favicons/favicon.svg", "primerCSS": "<link href='https://mirrors.sustech.edu.cn/cdnjs/ajax/libs/Primer/21.0.7/primer.css' rel='stylesheet' />", "homeUrl": "https://b706835de79a2b4e.github.io", "prevUrl": "disabled", "nextUrl": "disabled"}